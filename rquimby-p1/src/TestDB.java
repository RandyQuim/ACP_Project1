import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * A class to test database usage and entry of fields acquired from the
 * Reflection API. A Log class logs all events in the process. Fields are
 * extracted from class Vehicle and the values of those fields are generated by
 * class VehicleGeneration.
 * 
 * @author Randy Quimby
 * @version 1.0
 * 
 *          COP4027 Project#: 1 File Name: TestDB.java
 */
public class TestDB {
	private static final String FILE = "dbOperations.log";

	public static void main(String[] args) {
		Database db = new Database();
		Log log = new Log();
		String table = "";

		try {
			Reflection reflect = new Reflection();
			log.open(FILE);
			db.init();
			log.write("Loaded the embedded driver. ");
			log.write("Connecting to and creating the database... ");
			db.getConnection();
			log.write("Database created.");
			log.write("Attempting to drop " + Database.TABLE_NAME + " for new table creation.");
			try {
				db.dropTable();
			} catch (SQLException e) {
				log.write(Database.TABLE_NAME + " already dropped.");
			}
			
			log.write("Creating table...");
			table = reflect.createTableHeaders(log);
			db.createTable(table);
			log.write("Created table " + Database.TABLE_NAME + " with column header names and attributes as: \n" + table
					+ ".");
			log.write("Inserting info...");
			reflect.analyzeFieldValues(log, db);
			log.write("Field values for 10 instances of the class inserted into table.");
			ResultSet result = db.getResultSet();
			log.write("All rows from " + Database.TABLE_NAME + " selected.\n");
			log.write("Producing the ResultSet...");
			int i = 1;
			while (result.next()) {
				String make = result.getString("make");
				String model = result.getString("model");
				double weight = result.getDouble("weight");
				double engineSize = result.getDouble("engineSize");
				String isImport = result.getString("isImport");
				int numOfDoors = result.getInt("numOfDoors");

				log.write("Row " + i + ":\nMake: " + make.trim() + ", Model: " + model.trim() + ", Weight: " + weight
						+ ", Engine Size: " + engineSize + ", Import(T/F): " + isImport + ", NumOfDoors: " + numOfDoors);
				i++;
			}

			db.dropTable();
			log.write("\nTable " + Database.TABLE_NAME + " dropped.");
			log.readLog();
			log.close();
			result.close();
			db.close();

		} catch (SQLException err) {
			System.err.println("SQL error");
			err.printStackTrace(System.err);
			System.exit(0);
		} catch (ClassNotFoundException e1) {
			e1.printStackTrace();
			System.err.println("Class/class path not found");
		} catch (SecurityException e1) {
			e1.printStackTrace();
		} catch (InstantiationException e1) {
			e1.printStackTrace();
			System.err.println("Could not create a new instance of constructor object");
		} catch (IllegalAccessException e1) {
			e1.printStackTrace();
			System.err.println("Unable to load the embedded driver.");
			System.exit(0);
		} catch (IllegalArgumentException e1) {
			e1.printStackTrace();
		} catch (IOException e1) {
			e1.printStackTrace();
			System.err.println("Failed to open dbOperations.log");
			System.exit(0);
		} catch (NoSuchFieldException e) {
			e.printStackTrace();
			System.err.println("Error creating table headers/values using reflection.");
		}
	}

}
